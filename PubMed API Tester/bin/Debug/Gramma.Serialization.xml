<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gramma.Serialization</name>
    </assembly>
    <members>
        <member name="T:Gramma.Serialization.DefaultSerializationBinder">
            <summary>
            Default SerializationBinder implementation. Attempts to load the desired type with no restrictions.
            </summary>
        </member>
        <member name="M:Gramma.Serialization.DefaultSerializationBinder.#ctor">
            <summary>
            Create.
            </summary>
        </member>
        <member name="M:Gramma.Serialization.DefaultSerializationBinder.BindToType(System.String,System.String)">
            <summary>
            Attempts to load a type via <see cref="M:System.Type.GetType(System.String)"/>.
            </summary>
            <param name="assemblyName">The assembly name of the type.</param>
            <param name="typeName">The namespace qualified type name.</param>
            <returns>Returns the type found or null.</returns>
            <remarks>
            The method supports both fully qualified assembly names including version and signature or simple names.
            </remarks>
        </member>
        <member name="M:Gramma.Serialization.DefaultSerializationBinder.BindToName(System.Type,System.String@,System.String@)">
            <summary>
            Get the assembly name and type name of a type.
            The assembly name style is controlled via <see cref="P:Gramma.Serialization.DefaultSerializationBinder.AssemblyStyle"/> property.
            </summary>
            <param name="serializedType">The type from which to extract assembly and type names.</param>
            <param name="assemblyName">The name of the assembly in form specified by <see cref="P:Gramma.Serialization.DefaultSerializationBinder.AssemblyStyle"/> property.</param>
            <param name="typeName">The namespace-qualified type name.</param>
        </member>
        <member name="P:Gramma.Serialization.DefaultSerializationBinder.AssemblyStyle">
            <summary>
            Controls the assembly name output in method <see cref="M:Gramma.Serialization.DefaultSerializationBinder.BindToName(System.Type,System.String@,System.String@)"/>.
            Default is <see cref="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full"/>.
            </summary>
        </member>
        <member name="T:Gramma.Serialization.FastBinaryFormatter">
            <summary>
            An <see cref="T:System.Runtime.Serialization.IFormatter"/> implementation for serializing objects in a custom binary format.
            </summary>
            <remarks>
            <para>
            The stream format is a series of bytes prepended by <see cref="T:Gramma.Serialization.ElementType"/> descriptor bytes.
            See the <see cref="T:Gramma.Serialization.ElementType"/> members documentation for detailed structure.
            </para>
            <para>
            This formatter implements almost all serialization infrastructure with one exception:
            </para>
            <para>
            If a registered serialization surrogate returns in method <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)"/>
            a (non-null) different object than the one supplied
            to populate, then the data supplied in the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> 
            must not recursively cause a serialization cycle up to the new object.
            A cycle is allowed though if it is established outside the de/serialized objects. 
            In particular, cycles formed by associations created by other surrogates are allowed.
            </para>
            <para>
            The same restriction applies to <see cref="T:System.Runtime.Serialization.IObjectReference"/> implementations. 
            </para>
            <para>
            Note that support for returning a different non-null object in method <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)"/> has
            effect in version .NET 2.0 and later. The return value was previously ignored.
            </para>
            </remarks>
        </member>
        <member name="M:Gramma.Serialization.FastBinaryFormatter.#ctor">
            <summary>
            Create.
            </summary>
        </member>
        <member name="M:Gramma.Serialization.FastBinaryFormatter.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes the data on the provided stream and reconstitutes the graph of objects.
            </summary>
            <param name="serializationStream">The stream that contains the data to deserialize.</param>
            <returns>The top object of the deserialized graph.</returns>
        </member>
        <member name="M:Gramma.Serialization.FastBinaryFormatter.Serialize(System.IO.Stream,System.Object)">
            <summary>
            Serializes an object, or graph of objects with the given root to the provided stream.
            </summary>
            <param name="serializationStream">The stream where the formatter puts the serialized data.</param>
            <param name="graph">The object, or root of the object graph, to serialize.</param>
        </member>
        <member name="P:Gramma.Serialization.FastBinaryFormatter.Converter">
            <summary>
            The type converter to be used when implementations of 
            <see cref="T:System.Runtime.Serialization.ISerializable"/> and <see cref="T:System.Runtime.Serialization.ISerializationSurrogate"/> 
            pass values through <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.
            Default is <see cref="T:System.Runtime.Serialization.FormatterConverter"/>.
            </summary>
        </member>
        <member name="P:Gramma.Serialization.FastBinaryFormatter.InternFieldNames">
            <summary>
            If true, serialization will intern the field names of all objects.
            This is irrelevant to deserialization, as it will be automatically
            detected whether field interning was used or when the stream was produced.
            Default is true.
            </summary>
        </member>
        <member name="P:Gramma.Serialization.FastBinaryFormatter.Binder">
            <summary>
            The converter between types and string representations.
            Default is <see cref="T:Gramma.Serialization.DefaultSerializationBinder"/>.
            </summary>
        </member>
        <member name="P:Gramma.Serialization.FastBinaryFormatter.Context">
            <summary>
            The streaming context for formatter.
            </summary>
        </member>
        <member name="P:Gramma.Serialization.FastBinaryFormatter.SurrogateSelector">
            <summary>
            The surrogate selector defining the serialization overrides.
            </summary>
        </member>
        <member name="T:Gramma.Serialization.ElementType">
            <summary>
            Descriptor byte of following bytes in the binary stream. All ID values are of type <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ElementType.Null">
            <summary>
            Null reference.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ElementType.Type">
            <summary>
            Follows: Type ID, Assembly name, Type name.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ElementType.TypeRef">
            <summary>
            Follows: Type ID.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ElementType.Array">
            <summary>
            Follows: element [Type | TypeRef], object id, dimensions count, dimension 0 (lower bound, length), ..., dimension n-1 bounds, [Instance | ObjectRef]*.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ElementType.Instance">
            <summary>
            Follows: [Type | TypeRef], (object ID)?, [(fields count, (Field name, value)*) | primitive].
            </summary>
            <remarks>
            Object ID is not written if the instance is value type.
            </remarks>
        </member>
        <member name="F:Gramma.Serialization.ElementType.ObjectRef">
            <summary>
            Follows: object ID.
            </summary>
        </member>
        <member name="T:Gramma.Serialization.ObjectWriter">
            <summary>
            Writes an object graph to a stream.
            </summary>
        </member>
        <member name="T:Gramma.Serialization.ObjectStreamer">
            <summary>
            Common base for <see cref="T:Gramma.Serialization.ObjectReader"/> and <see cref="T:Gramma.Serialization.ObjectWriter"/>.
            Holds formatter state.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectStreamer.binder">
            <summary>
            The serialization binder as specified by the formatter.
            </summary>
            <remarks>
            This is provided by the formatter parameter in the constructor.
            </remarks>
        </member>
        <member name="F:Gramma.Serialization.ObjectStreamer.context">
            <summary>
            The streaming context as specified by the formatter.
            </summary>
            <remarks>
            This is provided by the formatter parameter in the constructor.
            </remarks>
        </member>
        <member name="F:Gramma.Serialization.ObjectStreamer.surrogateSelector">
            <summary>
            The surrogate selector of the formatter.
            </summary>
            <remarks>
            This is provided by the formatter parameter in the constructor.
            </remarks>
        </member>
        <member name="F:Gramma.Serialization.ObjectStreamer.stream">
            <summary>
            The stream used for serializing or deserializing objects.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectStreamer.converter">
            <summary>
            The type converter as specified by the formatter.
            </summary>
            <remarks>
            This is provided by the formatter parameter in the constructor.
            </remarks>
        </member>
        <member name="F:Gramma.Serialization.ObjectStreamer.emptyParameters">
            <summary>
            An empty object array commonly used for invoking parameterless methods or constructors
            using reflection.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectStreamer.serializableMembersByType">
            <summary>
            Maps types to serializable members via reflection, 
            excluding those marked with <see cref="T:System.NonSerializedAttribute"/>.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectStreamer.attributedMethodsDictionary">
            <summary>
            Holds a dictionary of atributed methods keyed by holder type and attribute type.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectStreamer.surrogatesByType">
            <summary>
            A cache holding surrogates of types. If a type does not have a surrogate, 
            the corresponding entry's value is null.
            </summary>
        </member>
        <member name="M:Gramma.Serialization.ObjectStreamer.#ctor(System.IO.Stream,Gramma.Serialization.FastBinaryFormatter)">
            <summary>
            Create.
            </summary>
            <param name="stream">The stream to read or write.</param>
            <param name="formatter">The formatter holding the serialization properties.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectStreamer.AccommodateList``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Make a list large enough to accommodate <paramref name="lastIndex"/>, padding with the 
            default objects of type <typeparamref name="T"/> as necessary.
            </summary>
            <typeparam name="T">The type of items in the list.</typeparam>
            <param name="list">The list.</param>
            <param name="lastIndex">The desired minimum last index of the list.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectStreamer.VisitArrayElements(System.Array,System.Action{System.Array,System.Int32[]})">
            <summary>
            Visit each array element and perform an action.
            </summary>
            <param name="array">The array whose elements to visit.</param>
            <param name="action">The action to perform as a function of the array and the element index.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectStreamer.GetSurrogateFor(System.Type)">
            <summary>
            Get the serialization surrogate for a type, if any, else return null.
            </summary>
            <param name="type">The type to check for surrogate.</param>
            <returns>
            Returns the associated surrogate, if any, else null.
            </returns>
        </member>
        <member name="M:Gramma.Serialization.ObjectStreamer.FireSerializationEvent(System.Object,System.Type)">
            <summary>
            Calls any methods which are marked with a given attribute and accepting a single parameter 
            of type <see cref="T:System.Runtime.Serialization.StreamingContext"/>.
            </summary>
            <param name="value">The object to search for methods.</param>
            <param name="attributeType">The type of the attribute.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectStreamer.GetMethodsWithAttribute(System.Type,System.Type)">
            <summary>
            Returns the methods of a type which are tagged with a given attribute and taking a 
            single parameter of type <see cref="T:System.Runtime.Serialization.StreamingContext"/>.
            </summary>
            <param name="type">The type having the methods.</param>
            <param name="attributeType">The type of the attribute.</param>
            <returns>Returns public and non-public methods conforming to the above search criteria.</returns>
        </member>
        <member name="M:Gramma.Serialization.ObjectStreamer.EnsureTypeIsSerializable(System.Type)">
            <summary>
            Ensures that a type and all its base types are marked with the <see cref="T:System.SerializableAttribute"/>.
            </summary>
            <param name="type">The type to check.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            When the type or at least one of its ancestors is not marked as serializable.
            </exception>
        </member>
        <member name="M:Gramma.Serialization.ObjectStreamer.GetSerializableMembersViaReflection(System.Type)">
            <summary>
            Get the serializable members of a type via reflection, 
            excluding those marked with <see cref="T:System.NonSerializedAttribute"/>.
            </summary>
            <param name="type">The type whose members to examine.</param>
        </member>
        <member name="T:Gramma.Serialization.ObjectStreamer.AttributedMethodSearch">
            <summary>
            Used as a key for searching methods of a type which are marked with an attribute.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectWriter.typesToIDsDictionary">
            <summary>
            Maps types to type IDs.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectWriter.objectsToIDsDictionary">
            <summary>
            Maps objects to object IDs.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectWriter.stringsToIDsDictionary">
            <summary>
            Maps interned strings to their IDs.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectWriter.internFieldNames">
            <summary>
            If true, serialization will intern the field names of all objects.
            </summary>
        </member>
        <member name="M:Gramma.Serialization.ObjectWriter.#ctor(System.IO.Stream,Gramma.Serialization.FastBinaryFormatter)">
            <summary>
            Create.
            </summary>
            <param name="stream">The stream to read or write.</param>
            <param name="formatter">The formatter holding the serialization properties.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectWriter.Write(System.Object)">
            <summary>
            Write an object graph to the stream.
            Repeatable calls will reuse object IDs and type IDs.
            </summary>
            <param name="value">The root of the object graph.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectWriter.WriteObject(System.Object)">
            <summary>
            Write an object to the stream and its fields recursively.
            The object may be a reference type, including an array, or a value type.
            The graph traversal pattern is DFS.
            </summary>
            <param name="value">The object to write.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectWriter.WriteObjectID(System.Object)">
            <summary>
            Write the object ID of an object. 
            If the object is a reference type, a new dictionary entry with the new object ID is allocated 
            associated with the object, else if it is a value type a -1 is recorded.
            </summary>
            <param name="value">The object for which to record an object ID.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectWriter.WriteSerializationInfo(System.Object,System.Runtime.Serialization.SerializationInfo)">
            <summary>
            Write the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> as composed by <see cref="T:System.Runtime.Serialization.ISerializable"/> 
            and <see cref="T:System.Runtime.Serialization.ISerializationSurrogate"/> implementations.
            </summary>
            <param name="value">The object being serialized.</param>
            <param name="info">The container of the serialized values.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectWriter.WriteType(System.Type)">
            <summary>
            Writes a <see cref="F:Gramma.Serialization.ElementType.Type"/> or <see cref="F:Gramma.Serialization.ElementType.TypeRef"/> element depending on
            whether the type has been previously encountered or not.
            </summary>
            <param name="type">The type to write to the stream.</param>
            <remarks>
            Takes into account the <see cref="T:System.Runtime.Serialization.SerializationBinder"/> associated with the formatter.
            </remarks>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            When the type or at least one of its ancestors is not marked as serializable.
            </exception>
        </member>
        <member name="T:Gramma.Serialization.ObjectWriter.Reference">
            <summary>
            Wraps references to objects.
            </summary>
        </member>
        <member name="M:Gramma.Serialization.ObjectWriter.Reference.GetHashCode">
            <summary>
            Returns a hash code using the base <see cref="M:System.Object.GetHashCode"/> 
            implemtation on the object in the <see cref="P:Gramma.Serialization.ObjectWriter.Reference.Value"/>
            field, even if the object has overriden the method.
            This means that the hash code depends on the pointer reference and not the contents of the object.
            </summary>
        </member>
        <member name="M:Gramma.Serialization.ObjectWriter.Reference.Equals(System.Object)">
            <summary>
            Determines equality to another <see cref="T:Gramma.Serialization.ObjectWriter.Reference"/>
            based on reference equality of the <see cref="P:Gramma.Serialization.ObjectWriter.Reference.Value"/> properties.
            </summary>
            <param name="obj">The other reference to test for equality.</param>
            <returns>Returns true if the <see cref="P:Gramma.Serialization.ObjectWriter.Reference.Value"/> properties reference the same object instance.</returns>
        </member>
        <member name="M:Gramma.Serialization.ObjectWriter.Reference.Equals(Gramma.Serialization.ObjectWriter.Reference)">
            <summary>
            Determines equality to another <see cref="T:Gramma.Serialization.ObjectWriter.Reference"/>
            based on reference equality of the <see cref="P:Gramma.Serialization.ObjectWriter.Reference.Value"/> properties.
            </summary>
            <param name="other">The other reference to test for equality.</param>
            <returns>Returns true if the <see cref="P:Gramma.Serialization.ObjectWriter.Reference.Value"/> properties reference the same object instance.</returns>
        </member>
        <member name="P:Gramma.Serialization.ObjectWriter.Reference.Value">
            <summary>
            The referenced object.
            </summary>
        </member>
        <member name="T:Gramma.Serialization.ObjectReader">
            <summary>
            Reads an object graph from a stream.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectReader.deserializationCallbacksList">
            <summary>
            List of the callbacks to be invoked upon deserialization completion.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectReader.idsToTypesList">
            <summary>
            Maps type IDs to types.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectReader.idsToObjectsList">
            <summary>
            Maps object IDs to objects.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectReader.unusedObjectIDsDuringSurrogation">
            <summary>
            While deserializing using <see cref="T:System.Runtime.Serialization.ISerializationSurrogate"/> or <see cref="T:System.Runtime.Serialization.IObjectReference"/>
            mechanisms, this set set holds the surrogated objects that have not been used during recursive deserialization.
            </summary>
            <remarks>
            This set is used to track the unsupported scenario of <see cref="T:Gramma.Serialization.FastBinaryFormatter"/>.
            If an initial surrogated type was referenced during its recursive
            deserialization and the <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
            returned a different object, then no reference fixup is possible with this formatter.
            The graph would have uninitialized left-overs of the initial surrogated object.
            Using this set we track the problem and we fire an exception.
            </remarks>
        </member>
        <member name="F:Gramma.Serialization.ObjectReader.typesToDeserializationConstructors">
            <summary>
            Cache for deserialization constructors of types implementing <see cref="T:System.Runtime.Serialization.ISerializable"/>.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectReader.typesToDefaultConstructors">
            <summary>
            Cache for default constructors.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectReader.memberInfoOptionalityCache">
            <summary>
            Holds a cache of whether member infos are marked as optional
            via the <see cref="T:System.Runtime.Serialization.OptionalFieldAttribute"/>.
            </summary>
        </member>
        <member name="F:Gramma.Serialization.ObjectReader.idsToStringsList">
            <summary>
            Keeps interned strings by their IDs, after clearing bit 31 of their ID.
            </summary>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.#ctor(System.IO.Stream,Gramma.Serialization.FastBinaryFormatter)">
            <summary>
            Create.
            </summary>
            <param name="stream">The stream to read from.</param>
            <param name="formatter">The formatter holding the serialization properties.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.Read">
            <summary>
            Read an object graph from the stream.
            Repeatable calls will reuse object IDs and type IDs defined in previous reads.
            </summary>
            <returns>
            Returns the object graph.
            </returns>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.ReadObject">
            <summary>
            Read an object from the stream and its fields recursively.
            </summary>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.IsOptional(System.Reflection.MemberInfo)">
            <summary>
            Returns true if a member has been marked with <see cref="T:System.Runtime.Serialization.OptionalFieldAttribute"/>.
            </summary>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.GetDeserializationConstructor(System.Type)">
            <summary>
            Get the constructor having signature (<see cref="T:System.Runtime.Serialization.SerializationInfo"/>, <see cref="T:System.Runtime.Serialization.StreamingContext"/>) or
            throw a <see cref="T:System.Runtime.Serialization.SerializationException"/> if no such constructor exists for a type.
            </summary>
            <param name="type">The type being searched for the particular constructor.</param>
            <returns>
            Returns the constructor or throws a <see cref="T:System.Runtime.Serialization.SerializationException"/> if no such constructor exists.
            </returns>
            <exception cref="T:System.Runtime.Serialization.SerializationException">When no such constructor exists.</exception>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.GetObjectReferenceForType(System.Type,System.Runtime.Serialization.SerializationInfo)">
            <summary>
            Get an instance for a type deriving from <see cref="T:System.Runtime.Serialization.IObjectReference"/>.
            </summary>
            <param name="objectReferenceType">The type deriving from <see cref="T:System.Runtime.Serialization.IObjectReference"/>.</param>
            <param name="serializationInfo">
            The serialization info read from the stream. Used when the <paramref name="objectReferenceType"/>
            also implements <see cref="T:System.Runtime.Serialization.ISerializable"/>.
            </param>
            <returns>
            Returns the instance as <see cref="T:System.Runtime.Serialization.IObjectReference"/>.
            </returns>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            When the <paramref name="objectReferenceType"/> doesn't derive from <see cref="T:System.Runtime.Serialization.IObjectReference"/>
            or doesn't have a default constructor.
            </exception>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.GetDefaultConstructor(System.Type)">
            <summary>
            Gets the default constructor of a type (public or not) if such exists, else throws a <see cref="T:System.Runtime.Serialization.SerializationException"/>.
            </summary>
            <param name="type">The type having the constructor.</param>
            <returns>
            Returns the constructor found, else throws a <see cref="T:System.Runtime.Serialization.SerializationException"/>.
            </returns>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            When the type has no default constructor.
            </exception>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.CreateViaDefaultConstructor(System.Type)">
            <summary>
            Create an instance via the default constructor of a type (public or not) 
            if such exists, else throws a <see cref="T:System.Runtime.Serialization.SerializationException"/>.
            </summary>
            <param name="type">The type of the instance.</param>
            <returns>
            Returns the created instance, else throws a <see cref="T:System.Runtime.Serialization.SerializationException"/>.
            </returns>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            When the type has no default constructor.
            </exception>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.ReadSerializationInfo(System.Type)">
            <summary>
            Read a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> from the current position of the stream.
            </summary>
            <param name="type">The type holding the fields to be deserialized.</param>
            <returns>Returns the info populated with field names and values.</returns>
            <remarks>
            The stream must point to: fields count, (Field name, value)*.
            </remarks>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.AssociateObjectIDToValue(System.Int32,System.Object)">
            <summary>
            Associate a value with an object ID.
            </summary>
            <param name="objectID">The object ID of the value.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.ReadType">
            <summary>
            Reads a <see cref="F:Gramma.Serialization.ElementType.Type"/> or <see cref="F:Gramma.Serialization.ElementType.TypeRef"/> element depending on
            what follows in the stream.
            </summary>
            <remarks>
            Takes into account the <see cref="T:System.Runtime.Serialization.SerializationBinder"/> associated with the formatter.
            </remarks>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            When the next element in the stream is not <see cref="F:Gramma.Serialization.ElementType.Type"/> or <see cref="F:Gramma.Serialization.ElementType.TypeRef"/>,
            or
            when the type or at least one of its ancestors is not marked as serializable.
            </exception>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.ExpectFromStream(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a requested number of bytes from the stream. 
            Throws a <see cref="T:System.IO.EndOfStreamException"/> if the stream can't provide the requested number of bytes.
            </summary>
            <param name="buffer">The buffer to accept the read bytes.</param>
            <param name="offset">The offset in the <paramref name="buffer"/> where bytes are placed.</param>
            <param name="length">The amount of bytes requested from the stream.</param>
            <exception cref="T:System.IO.EndOfStreamException">Whren the stream can't provide the requested number of bytes.</exception>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.ExpectByteFromStream">
            <summary>
            Read a byte from the stream.
            Throws a <see cref="T:System.IO.EndOfStreamException"/> if the stream can't provide the requested byte.
            </summary>
            <returns>Returns the byte.</returns>
            <exception cref="T:System.IO.EndOfStreamException">Whren the stream can't provide the byte.</exception>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.PushUreferencedObjectIDDuringSurrogation(System.Int32)">
            <summary>
            Adds an object ID to the set of yet unreferenced surrogate objects.
            </summary>
            <param name="objectID">The object ID.</param>
        </member>
        <member name="M:Gramma.Serialization.ObjectReader.PopUreferencedObjectDuringSurrogation(System.Int32)">
            <summary>
            Attempts to find and remove an object ID from the set of yet unreferenced surrogate objects.
            </summary>
            <param name="objectID">The object ID.</param>
            <returns>Returns true if the object was found, else false if the ID was referenced.</returns>
        </member>
    </members>
</doc>
